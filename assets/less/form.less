@import "_mixin";

// button and inputs are all form controls, they share same sizing system, thus they're defined in one file
@font-size-xl: floor((@G-font-size-component * 1.467));// ~22px
@font-size-l: ceil((@G-font-size-component * 1.133));// ~17px
@font-size: @G-font-size-component;// 15px
@font-size-s: floor((@G-font-size-component * 0.867));// ~13px
@font-size-xs: ceil((@G-font-size-component * 0.8));// ~12px

// using number as line-height is preferred cause length and percentage line-heights have poor inheritance behavior
// https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
@line-height-xl: 1.227;// ~22px * 1.227 =  ~27px
@line-height-l: 1.471;// ~17px * 1.471 = ~25px
@line-height: 1.4;// 15px * 1.4 = ~21px
@line-height-s: 1.385;// ~13px * 1.385 = ~18px
@line-height-xs: 1.083;// ~13px

@padding-vertical-xl: 13px;
@padding-vertical-l: 10px;
@padding-vertical: 10px;
@padding-vertical-s: 9px;
@padding-vertical-xs: 6px;

@padding-horizontal-xl: 20px;
@padding-horizontal-l: 19px;
@padding-horizontal: 15px;
@padding-horizontal-s: 13px;
@padding-horizontal-xs: 9px;

@border-radius-xl: @G-border-radius-l;
@border-radius-l: @G-border-radius-l;
@border-radius: @G-border-radius;
@border-radius-s: @G-border-radius-s;
@border-radius-xs: @G-border-radius-s;

.form-ctrl-size(@fs; @lh; @pd-v; @pd-h; @br) {
	font-size: @fs;
	line-height: @lh;
	padding: @pd-v @pd-h;
	.border-radius(@br);
}

.nb-btn {
	// variables only used for button
	@color: #FFF;
	@bgc-default: @G-color-gray-light;
	
	@bgc-hover: mix(@G-color-gray-light, #FFF, 80%);
	@bgc-active: mix(@G-color-gray-light, #000, 85%);
	
	@bgc-hover-primary: mix(@G-color-brand-secondary, #FFF, 80%);
	@bgc-active-primary: mix(@G-color-brand-secondary, #000, 85%);
	
	@bgc-hover-info: mix(@G-color-brand-info, #FFF, 80%);
	@bgc-active-info: mix(@G-color-brand-info, #000, 85%);
	
	@bgc-hover-success: mix(@G-color-brand-success, #FFF, 80%);
	@bgc-active-success: mix(@G-color-brand-success, #000, 85%);
	
	@bgc-hover-danger: mix(@G-color-brand-danger, white, 80%);
	@bgc-active-danger: mix(@G-color-brand-danger, #000, 85%);
	
	@bgc-hover-warning: overlay(@G-color-brand-warning, darken(#FFF, 37.5%));
	@bgc-active-warning: mix(@G-color-brand-warning, #000, 85%);
	
	@bgc-hover-inverse: overlay(@G-color-brand-primary, darken(#FFF, 37.5%));
	@bgc-active-inverse: mix(@G-color-brand-primary, #000, 85%);
	
	// utils for button
	.button-colors(@bgc; @bgc-h; @bgc-a; @c: #FFF) {
		color: @c;
		background-color: @bgc;
		
		&:hover, &.status-hover,
		&:focus, &.status-focus,
		&:active, &.status-active {
			color: @c;
			background-color: @bgc-h;
			border-color: @bgc-h;
		}
		&:active, &.status-active {
			background: @bgc-a;
			border-color: @bgc-a;
		}
	}
	.button-size(@fs; @lh; @pd-v; @pd-h; @br) {
		.form-ctrl-size(@fs; @lh; @pd-v; @pd-h; @br);
		button& {// button has a 2px more line-height magically
			@pdv: @pd-v - 1px;
			@pdh: @pd-h - 1px;
			padding: @pdv @pdh;
		}
	}
	
	// common
	border: none;
	font-weight: @G-font-weight-normal;
	line-height: @line-height;
	-webkit-font-smoothing: subpixel-antialiased;
	transition: border .25s linear, color .25s linear, background-color .25s linear;
	cursor: pointer;
	outline: none;// we have focus style, sot remove it is ok
	box-shadow: inset 0 -2px 0 rgba(0, 0, 0, 0.15);
	display: inline-block;
	
	&.status-active,
	&:active {
		box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.15);
	}
	
	// types and statuses
	.button-colors(@bgc-default, @bgc-hover, @bgc-active);
	&.type-primary {
		.button-colors(@G-color-brand-secondary, @bgc-hover-primary, @bgc-active-primary);
	}
	&.type-info {
		.button-colors(@G-color-brand-info, @bgc-hover-info, @bgc-active-info);
	}
	&.type-warning {
		.button-colors(@G-color-brand-warning, @bgc-hover-warning, @bgc-active-warning);
	}
	&.type-danger {
		.button-colors(@G-color-brand-danger, @bgc-hover-danger, @bgc-active-danger);
	}
	&.type-success {
		.button-colors(@G-color-brand-success, @bgc-hover-success, @bgc-active-success);
	}
	&.type-inverse {
		.button-colors(@G-color-brand-primary, @bgc-hover-inverse, @bgc-active-inverse);
	}
	
	&[disabled],
	&.status-disabled {
		&,
		&:hover, &.status-hover,
		&:focus, &.status-focus,
		&:active, &.status-active {
			background-color: @G-color-gray-light;
			border-color: @G-color-gray-light;
			color: fade(@color, 75%);
			cursor: not-allowed;
			.opacity(.7);
		}
	}
	
	// sizes
	.button-size(@font-size, @line-height, @padding-vertical, @padding-horizontal, @border-radius);
	&.size-xl {
		.button-size(@font-size-xl, @line-height-xl, @padding-vertical-xl, @padding-horizontal-xl, @border-radius-xl);
	}
	&.size-l {
		.button-size(@font-size-l, @line-height-l, @padding-vertical-l, @padding-horizontal-l, @border-radius-l);
	}
	&.size-s {
		.button-size(@font-size-s, @line-height-s, @padding-vertical-s, @padding-horizontal-s, @border-radius);
	}
	&.size-xs {
		.button-size(@font-size-xs, @line-height-xs, @padding-vertical-xs, @padding-horizontal-xs, @border-radius-xs);
	}
	
	// other alternatives
	&.alt-flat {
		box-shadow: none;
		
		&:active,
		&.status-active {
			box-shadow: none;
		}
	}
	&.alt-link {
		&:hover, &.status-hover,
		&:focus, &.status-focus {
			color: @G-color-link-h;
			text-decoration: underline;
			background-color: transparent;
			box-shadow: none;
		}
		&[disabled], &.status-disabled,
		fieldset[disabled] &, fieldset.status-disabled & {
			&:hover,
			&:focus {
				color: @G-color-gray-light;
				text-decoration: none;
			}
		}
	}
}

// Common form controls
//
// Shared size and type resets for form controls. Apply `.nb-form-ctrl` to any of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]
// div[contenteditable]

.nb-form-ctrl {
	@bg: #FFF;
	@bg-disabled: mix(@G-color-gray, white, 10%);
	
	@border-radius: @G-border-radius-l;
	
	.input-size(@fs; @lh; @pd-v; @pd-h; @br) {
		@h-min: @pd-v * 2 + @fs * @lh + 4px;// padding top/bottom + absolute line-height + 2x border width
		
		.form-ctrl-size(@fs; @lh; @pd-v; @pd-h; @br);
		min-height: @h-min;
		
		select& {
			height: @h-min;
			line-height: @h-min;
		}
		
		textarea&,
		select[multiple] & {
			height: auto;
			min-height: @h-min;
		}
	}
	
	.input-colors(@c: @G-color-brand-primary; @bdc: @G-color-gray-light) {
		color: @c;
		border-color: mix(@bdc, #FFF, 50%);
		box-shadow: none;
		
		&:focus {
			border-color: @bdc;
			box-shadow: none;
		}
	}
	
	border: 2px solid @G-color-gray-light;
	box-shadow: none;
	.box-sizing();
	.input-colors();
	transition: border .15s linear, color .15s linear, background-color .15s linear;
	&:focus {
		border-color: @G-color-brand-secondary;// override .input-colors mixin
		outline: 0;
		box-shadow: none;
	}
	
	// statuses
	&.status-warning {
		.input-colors(@G-color-brand-warning; @G-color-brand-warning);
	}
	&.status-success {
		.input-colors(@G-color-brand-success; @G-color-brand-success);
	}
	&.status-error {
		.input-colors(@G-color-brand-danger; @G-color-brand-danger);
	}
	// Disabled and read-only inputs
	// Note: HTML5 says that controls under a fieldset > legend:first-child won't
	// be disabled if the fieldset is disabled. Due to implementation difficulty,
	// we don't honor that edge case; we style them as disabled anyway.
	&[disabled], &.status-disabled, 
	&[readonly], &.status-readonly,
	fieldset[disabled] &, fieldset.status-disabled & {
		background-color: @bg-disabled;
		border-color: mix(@G-color-gray, #FFF, 40%);
		color: mix(@G-color-gray, #FFF, 75%);
		cursor: default;
		.opacity(.7);
	}
	
	// sizes
	.input-size(@font-size, @line-height, @padding-vertical - 1px, @padding-horizontal - 1px, @border-radius);
	&.size-xl {
		.input-size(@font-size-xl, @line-height-xl, @padding-vertical-xl - 1px, @padding-horizontal-xl - 1px, @border-radius-xl);
	}
	&.size-l {
		.input-size(@font-size-l, @line-height-l, @padding-vertical-l - 1px, @padding-horizontal-l - 1px, @border-radius-l);
	}
	&.size-s {
		.input-size(@font-size-s, @line-height-s, @padding-vertical-s - 1px, @padding-horizontal-s - 1px, @border-radius);
	}
	&.size-xs {
		.input-size(@font-size-xs, @line-height-xs, @padding-vertical-xs - 1px, @padding-horizontal-xs - 1px, @border-radius-xs);
	}
	
	// Flat (without border)
	&.alt-flat {
		border-color: transparent;
	}
}